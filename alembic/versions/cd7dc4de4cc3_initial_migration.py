"""initial migration

Revision ID: cd7dc4de4cc3
Revises: 14d7ee834476
Create Date: 2025-06-19 17:54:21.386367

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cd7dc4de4cc3'
down_revision: Union[str, None] = '14d7ee834476'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    tables = inspector.get_table_names()

    if 'poll_exclusions' not in tables:
        op.create_table('poll_exclusions',
            sa.Column('poll_id', sa.Integer(), nullable=False),
            sa.Column('user_id', sa.BigInteger(), nullable=False),
            sa.PrimaryKeyConstraint('poll_id', 'user_id')
        )

    if 'web_apps' in tables:
        op.drop_table('web_apps')

    if 'admin_context' in tables:
        op.drop_table('admin_context')

    if 'responses' in tables:
        fkeys = inspector.get_foreign_keys('responses')
        fk_exists = any(
            fk['referred_table'] == 'polls' and
            set(fk['constrained_columns']) == {'poll_id'}
            for fk in fkeys
        )
        if not fk_exists:
            op.create_foreign_key(None, 'responses', 'polls', ['poll_id'], ['poll_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    tables = inspector.get_table_names()

    if 'responses' in tables:
        fkeys = inspector.get_foreign_keys('responses')
        constraint_name = None
        for fk in fkeys:
            if fk['referred_table'] == 'polls' and set(fk['constrained_columns']) == {'poll_id'}:
                constraint_name = fk['name']
                break
        if constraint_name:
            op.drop_constraint(constraint_name, 'responses', type_='foreignkey')

    if 'admin_context' not in tables:
        op.create_table('admin_context',
            sa.Column('user_id', sa.INTEGER(), nullable=True),
            sa.Column('group_id', sa.INTEGER(), nullable=True),
            sa.PrimaryKeyConstraint('user_id')
        )

    if 'web_apps' not in tables:
        op.create_table('web_apps',
            sa.Column('id', sa.INTEGER(), nullable=False),
            sa.Column('chat_id', sa.BIGINT(), nullable=False),
            sa.Column('name', sa.VARCHAR(), nullable=False),
            sa.Column('url', sa.VARCHAR(), nullable=False),
            sa.PrimaryKeyConstraint('id')
        )

    if 'poll_exclusions' in tables:
        op.drop_table('poll_exclusions')
    # ### end Alembic commands ###
